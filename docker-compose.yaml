version: '3'
services:
  app:
      build: ./docker/app/
      container_name: php-node-composer-java-userservice
      volumes:
          - ./:/usr/share/nginx/www
      working_dir: /usr/share/nginx/www
      depends_on:
        - postgres

  nginx:
      build: ./docker/nginx
      container_name: web-server-userservice
      links:
          - app
      volumes_from:
          - app
      ports:
          - 81:80
 
  postgres:
    image: postgres:10.1
    container_name: postgres-db-userservice
    restart: always
    ports:
          - 5433:5432
    environment:
      POSTGRES_DB: ebs
      POSTGRES_USER: ebs
      POSTGRES_PASSWORD: ebs
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
  # adminer:
  #   container_name: postgres-adminer-userservice
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080

  # zookeeper:
  #   container_name: kafka-zookeeper-userservice
  #   image: wurstmeister/zookeeper
  #   restart: always
  #   ports:
  #     - 2181:2181
  #   # volumes:
  #   #  - zkdata:/data

  # kafka:
  #   image: wurstmeister/kafka
  #   container_name: kafka-userservice
  #   restart: always
  #   ports:
  #     - 9092:9092
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  #     KAFKA_CREATE_TOPICS: "test:1:1"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - zookeeper

  # kafka-ui:
  #   image: provectuslabs/kafka-ui
  #   container_name: kafka-kafka-ui-userservice
  #   ports:
  #     - "8081:8080"
  #   restart: always
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=local
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #     - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  #     - KAFKA_CLUSTERS_0_READONLY=false
 